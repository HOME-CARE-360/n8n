name: Deploy N8N to VPS

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Validate docker-compose.yml
        run: |
          docker-compose config
          echo "✅ Docker Compose configuration is valid"

      - name: Check environment files
        run: |
          if [ -f "env.example" ]; then
            echo "✅ env.example exists"
          else
            echo "⚠️ env.example not found, will create basic .env"
          fi

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Create .env file
        run: |
          cat > .env << EOF
          N8N_USER=admin
          N8N_PASSWORD=admin123
          N8N_HOST=0.0.0.0
          N8N_EDITOR_BASE_URL=http://${{ secrets.VPS_HOST }}:5678
          WEBHOOK_URL=http://${{ secrets.VPS_HOST }}:5678/
          GENERIC_TIMEZONE=Asia/Ho_Chi_Minh
          EOF

      - name: Copy project files to VPS
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          source: "docker-compose.yml,.env"
          target: "/home/${{ secrets.VPS_USER }}/projects/capstone/n8n"

      - name: SSH Deploy
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            cd /home/${{ secrets.VPS_USER }}/projects/capstone/n8n

            echo "📦 Stopping current containers..."
            docker-compose down --remove-orphans || true

            echo "💾 Creating backup if exists..."
            if [ -d "n8n_data" ]; then
              tar -czf "n8n_backup_$(date +%Y%m%d_%H%M%S).tar.gz" n8n_data/
              ls -t n8n_backup_*.tar.gz 2>/dev/null | tail -n +6 | xargs -r rm
            fi

            echo "📥 Pulling latest Docker image..."
            docker-compose pull

            echo "🚀 Starting containers..."
            docker-compose up -d

            echo "⏳ Waiting for N8N to be ready..."
            sleep 20

            echo "🔍 Checking service status..."
            docker-compose ps

            echo "🏥 Performing health check..."
            if curl -f -s http://localhost:5678 > /dev/null; then
              echo "✅ Health check passed!"
            else
              echo "❌ Health check failed!"
              docker-compose logs
              exit 1
            fi

            echo "🧹 Cleaning up unused images..."
            docker image prune -f

            echo "✅ N8N deployment completed!"
            echo "🌐 Access URL: http://${{ secrets.VPS_HOST }}:5678"
